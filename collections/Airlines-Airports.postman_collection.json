{
	"info": {
		"_postman_id": "a50386f3-5d43-43c5-80d4-ed214659b0fd",
		"name": "Airlines-Airports",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12970512"
	},
	"item": [
		{
			"name": "Add an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airline_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Qatar Airways\",\r\n   \"description\": \"Qatar Airways Company Q.C.S.C. operating as Qatar Airways, is the state-owned flag carrier airline of Qatar.\",\r\n   \"foundingDate\": \"22-11-1993\",\r\n   \"webpage\": \"qatarairways.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": [
				{
					"name": "Add an airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Qatar Airways\",\r\n   \"description\": \"Qatar Airways Company Q.C.S.C. operating as Qatar Airways, is the state-owned flag carrier airline of Qatar.\",\r\n   \"foundingDate\": \"22-11-1993\",\r\n   \"webpage\": \"qatarairways.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"1\",\r\n    \"name\": \"Qatar Airways\",\r\n    \"description\": \"Qatar Airways Company Q.C.S.C. operating as Qatar Airways, is the state-owned flag carrier airline of Qatar.\",\r\n    \"foundingDate\": \"22-11-1993\",\r\n    \"webpage\": \"qatarairways.com\"\r\n}"
				}
			]
		},
		{
			"name": "Add an airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airport_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Qatar Airport\",\r\n    \"code\": \"Q1S\",\r\n    \"country\": \"Qatar\",\r\n    \"city\": \"Doha\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Qatar Airport\",\r\n    \"code\": \"Q1S\",\r\n    \"country\": \"Qatar\",\r\n    \"city\": \"Doha\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"1\",\r\n    \"name\": \"Qatar Airport\",\r\n    \"code\": \"Q1S\",\r\n    \"country\": \"Qatar\",\r\n    \"city\": \"Doha\"\r\n}"
				}
			]
		},
		{
			"name": "Add an airport to an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{airport_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport to an airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_1}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"1\",\r\n    \"name\": \"Qatar Airways\",\r\n    \"description\": \"Qatar Airways Company Q.C.S.C. operating as Qatar Airways, is the state-owned flag carrier airline of Qatar.\",\r\n    \"foundingDate\": \"22-11-1993\",\r\n    \"webpage\": \"qatarairways.com\",\r\n    \"airports\": [\r\n        {\r\n            \"id\": \"1\",\r\n            \"name\": \"Qatar Airport\",\r\n            \"code\": \"Q1S\",\r\n            \"country\": \"Qatar\",\r\n            \"city\": \"Doha\"\r\n        }\r\n    ]\r\n}"
				}
			]
		},
		{
			"name": "Add an invalid airport to an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"The airport with the given id was not found\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all airports of an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Get all airports of an airline",
					"originalRequest": {
						"method": "GET",
						"header": []
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\r\n    {\r\n        \"id\": \"1\",\r\n        \"name\": \"Qatar Airport\",\r\n        \"code\": \"Q1S\",\r\n        \"country\": \"Qatar\",\r\n        \"city\": \"Doha\"\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Get an airport of an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{airport_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Get an airport of an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_1}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"1\",\r\n    \"name\": \"Qatar Airport\",\r\n    \"code\": \"Q1S\",\r\n    \"country\": \"Qatar\",\r\n    \"city\": \"Doha\"\r\n}"
				}
			]
		},
		{
			"name": "Get an airport non-associated to an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"statusCode\": 412,\r\n   \"message\": \"The airport with the given id is not associated to the airline\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{airport_id_2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update airports of an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"{{artwork_id_2}}\"\r\n   }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Update airports of an airline",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"{{artwork_id_2}}\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"1\",\r\n    \"name\": \"Qatar Airways\",\r\n    \"description\": \"Qatar Airways Company Q.C.S.C. operating as Qatar Airways, is the state-owned flag carrier airline of Qatar.\",\r\n    \"foundingDate\": \"22-11-1993\",\r\n    \"webpage\": \"qatarairways.com\",\r\n    \"airports\": [\r\n        {\r\n            \"id\": \"1\",\r\n            \"name\": \"Doha Airport\",\r\n            \"code\": \"Q1S\",\r\n            \"country\": \"Qatar\",\r\n            \"city\": \"Doha\"\r\n        }\r\n    ]\r\n}"
				}
			]
		},
		{
			"name": "Update invalid airports of an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Update invalid airports of an airline",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"The airport with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Delete an airport of an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports{{airport_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports{{airport_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete an airport of an airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports{{airport_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports{{airport_id_2}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an airport non-associated to an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"{{airport_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete an airport non-associated to an airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_1}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}